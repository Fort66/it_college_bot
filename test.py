# from aiogram import Bot, Dispatcher
# from aiogram.enums import ParseMode
# from aiogram_dialog import Dialog, DialogManager, StartMode, Window
# from aiogram_dialog.widgets.kbd import Button, Row
# from aiogram_dialog.widgets.text import Format
# from aiogram.types import Message
# from aiogram.fsm.storage.memory import MemoryStorage

# # ===== –°–æ—Å—Ç–æ—è–Ω–∏—è =====
# from enum import Enum

# class States(Enum):
#     MAIN = "main"
#     INFO = "info"

# # ====== –ö–æ–¥ –±–æ—Ç–∞ ======

# bot = Bot("7205076132:AAHS4bKNtfg3gD3PB7iHsszj1ZEH9rnYVtU")
# storage = MemoryStorage()
# dp = Dispatcher(storage=storage)

# # ====== –î–∏–∞–ª–æ–≥ ======
# dialog = Dialog(
#     Window(
#         Format("<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ üëá"),  # <-- HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
#         Row(
#             Button(text="üîπ –û –ø—Ä–æ–≥—Ä–∞–º–º–µ", id="btn_info", on_click=lambda c, b: c.dialog_manager.switch_to(States.INFO)),
#             Button(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", id="btn_settings"),
#         ),
#         state=States.MAIN,
#         parse_mode=ParseMode.HTML,  # <-- –≤–∞–∂–Ω–æ!
#     ),
#     Window(
#         Format("<i>–≠—Ç–æ –¥–µ–º–æ-–ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã aiogram_dialog —Å HTML-—Ä–∞–∑–º–µ—Ç–∫–æ–π.</i>\n\n–ù–∞–∂–º–∏—Ç–µ –ù–∞–∑–∞–¥ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞."),
#         Row(
#             Button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", id="btn_back", on_click=lambda c, b: c.dialog_manager.switch_to(States.MAIN)),
#         ),
#         state=States.INFO,
#         parse_mode=ParseMode.HTML,
#     )
# )

# # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥
# dp.include_router(dialog)

# # –ó–∞–ø—É—Å–∫ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
# @dp.message()
# async def start(message: Message, dialog_manager: DialogManager):
#     await dialog_manager.start(States.MAIN, mode=StartMode.RESET_STACK)

# # ====== –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ======
# async def main():
#     setup_dialogs(dp)
#     await dp.start_polling(bot)

# if __name__ == '__main__':
#     from aiogram_dialog.utils import setup_dialogs
#     import asyncio
#     asyncio.run(main())


from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from aiogram_dialog import Dialog, DialogManager, StartMode, Window
from aiogram_dialog.widgets.kbd import Button
from aiogram_dialog.widgets.text import Const
from enum import Enum

# –°–æ—Å—Ç–æ—è–Ω–∏—è (States)
class MainMenuStates(Enum):
    MAIN = "main"

class SettingsStates(Enum):
    SETTINGS_MENU = "settings_menu"

# –û–∫–Ω–æ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_menu = Dialog(
    Window(
        Const("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        Button(Const("–ù–∞—Å—Ç—Ä–æ–π–∫–∏"), id="settings", on_click=lambda c, b, m: m.start(SettingsStates.SETTINGS_MENU, mode=StartMode.NEW_STACK)),
        state=MainMenuStates.MAIN,
    )
)

# –û–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫
settings_menu = Dialog(
    Window(
        Const("–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"),
        Button(Const("–ù–∞–∑–∞–¥"), id="back", on_click=lambda c, b, m: m.done()),
        state=SettingsStates.SETTINGS_MENU,
    )
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
async def start(message: Message, dialog_manager: DialogManager):
    await dialog_manager.start(MainMenuStates.MAIN, mode=StartMode.RESET_STACK)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token="7205076132:AAHS4bKNtfg3gD3PB7iHsszj1ZEH9rnYVtU")
dp = Dispatcher()
dp.include_router(main_menu)
dp.include_router(settings_menu)
# dp.message.middleware(SetupMiddleware())
dp.message.register(start, F.text == "/start")

if __name__ == "__main__":
    import asyncio
    asyncio.run(dp.start_polling(bot))