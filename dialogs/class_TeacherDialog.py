from typing import Any

from aiogram.types import CallbackQuery, Message
from aiogram_dialog import (
    Dialog,
    DialogManager,
    Window,
)
from aiogram_dialog.widgets.input import TextInput
from aiogram_dialog.widgets.kbd import Cancel, Group, Start, SwitchTo
from aiogram_dialog.widgets.text import Const

from database.class_Database import Database
from database.models import *
from functions.clear_chat import clear_chat_window
from states.teacher_states import *

db = Database()


class TeacherDialog:
    id = None

    def __init__(self):
        self.dialog = Dialog(
            Window(
                Const(
                    "·Ö†·Ö†·Ö†·Ö†·Ö†·Ö†·Ö†·Ö†·Ö†·Ö†·Ö†·Ö†–£–ø—Å üòß\n–ù–µ –Ω–∞—Ö–æ–∂—É –í–∞—Å –≤ —Å–ø–∏—Å–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π.\n–í–æ–∑–º–æ–∂–Ω–æ –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ, –∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ –∑–∞–≤–µ—Ä—à—ë–Ω.\n–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–∏ –∏–º—è, –æ—Ç—á–µ—Å—Ç–≤–æ –∏ —Ñ–∞–º–∏–ª–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n·Ö†·Ö†·Ö†·Ö†·Ö†·Ö†·Ö†·Ö†üëâ –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ –§–∞–º–∏–ª–∏—è üëà\n–∏ —è –ø—Ä–æ–≤–µ—Ä—é –í–∞—Å –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö! üïµüèª‚Äç‚ôÇÔ∏è"
                    ),
                TextInput(
                    id="input_teacher_name",
                    on_success=self.get_name,
                ),
                state=TeacherState.name,
            ),
            Window(
                Const(
                    "–î–∞, –í—ã –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!\n–ù–æ –ø—Ä–æ—Ü–µ—Å—Å –í–∞—à–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω.\n–î–∞–≤–∞–π—Ç–µ –∑–∞–≤–µ—Ä—à–∏–º –µ–≥–æ. –û—Ç –í–∞—Å –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–∫–æ—Ç–æ—Ä–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.\n–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π email"
                    ),
                TextInput(id="input_teacher_email", on_success=self.update_user),
                state=TeacherState.email,
            ),
            Window(
                Const(
                    "–°–ø–∞—Å–∏–±–æ! –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!"
                    ),
                SwitchTo(
                    Const("–ú–µ–Ω—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è ‚ñ∂Ô∏è"),
                    id="is_teacher",
                    state=TeacherState.is_registry,
                ),
                Cancel(Const("üîö –í—ã–π—Ç–∏ –∏–∑ –±–æ—Ç–∞"), id="exit_to_bot"),
                state=TeacherState.success_registry,
            ),
            Window(
                Const("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!"),
                Group(
                    Start(
                        Const("üìö –ü—Ä–µ–¥–º–µ—Ç—ã"),
                        id="disciplines",
                        state=DisciplineState.start,
                    ),
                    Start(Const("üë©üèº‚Äçüéìüë®üèª‚Äçüéì –ì—Ä—É–ø–ø—ã"), id="groups", state=GroupState.start),
                    Start(
                        Const("‚ÄºÔ∏è –≠–∫–∑–∞–º–µ–Ω—ã / –ó–∞—á–µ—Ç—ã"), id="exam", state=ExamState.start
                    ),
                    Cancel(Const("üîô –ü—Ä–æ—Ñ–∏–ª–∏"), id="exit_to_bot"),
                    width=2,
                ),
                state=TeacherState.is_registry,
            ),
            Window(
                Const(
                    "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π! –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–∞–∑—É, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å  –∫ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!"
                ),
                state=TeacherState.not_found,
            ),
        )

    @staticmethod
    async def user(
        call: CallbackQuery,
        widget: Any,
        dialog_manager: DialogManager,
        *args,
        **kwargs,
    ):
        reg_complete = await db.get_record(
            Teachers, field_name="user_id", user_id=str(call.from_user.id)
        )

        if reg_complete is None:
            await dialog_manager.start(
                TeacherState.name, data=dialog_manager.dialog_data
            )
        else:
            await dialog_manager.start(
                TeacherState.is_registry, data=dialog_manager.dialog_data
            )

    @staticmethod
    async def is_user(
        call: CallbackQuery,
        widget: Any,
        dialog_manager: DialogManager,
        *args,
        **kwargs,
    ):
        match kwargs["id"]:
            case "is_teacher":
                await dialog_manager.switch_to(TeacherState.is_registry)

    @staticmethod
    async def get_name(
        message: Message,
        widget: Any,
        dialog_manager: DialogManager,
        data: str,
        *args,
        **kwargs,
    ):
        dialog_manager.dialog_data["text"] = data
        dialog_manager.dialog_data["user_id"] = dialog_manager.event.from_user.id
        dialog_manager.dialog_data["username"] = dialog_manager.event.from_user.username

        result = await db.get_record(Teachers, field_name="text", text=data)

        if result is not None:
            dialog_manager.dialog_data["id"] = result.id
            await clear_chat_window(message, dialog_manager.event.bot)
            await dialog_manager.switch_to(TeacherState.email)
        else:
            await dialog_manager.done()
            await dialog_manager.done()
            await clear_chat_window(message, dialog_manager.event.bot)
            (
                await message.answer(
                    "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π! –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–∞–∑—É, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å  –∫ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!"
                ),
            )

    @staticmethod
    async def update_user(
        message: Message,
        widget: TextInput,
        dialog_manager: DialogManager,
        data: str,
        *args,
        **kwargs,
    ):
        db = Database()
        dialog_manager.dialog_data["email"] = data
        await clear_chat_window(message, dialog_manager.event.bot)

        try:
            await db.update_record(
                Teachers,
                field_name="id",
                id=dialog_manager.dialog_data["id"],
                user_id=dialog_manager.dialog_data["user_id"],
                text=dialog_manager.dialog_data["text"],
                username=dialog_manager.dialog_data["username"],
                email=dialog_manager.dialog_data["email"],
            )
            await dialog_manager.switch_to(TeacherState.success_registry)
        except Exception as e:
            print(e)
